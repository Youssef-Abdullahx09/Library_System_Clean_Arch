// <auto-generated />
using Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240317060227_ConfiguredAuthTables")]
    partial class ConfiguredAuthTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.AppFeature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppFeatures");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Identity",
                            NameAr = "الهويه"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Books",
                            NameAr = "الكتب"
                        });
                });

            modelBuilder.Entity("Domain.Entities.AppFeaturePermission", b =>
                {
                    b.Property<int>("AppFeatureId")
                        .HasColumnType("int");

                    b.Property<int>("AppPermissionId")
                        .HasColumnType("int");

                    b.HasKey("AppFeatureId", "AppPermissionId");

                    b.HasIndex("AppPermissionId");

                    b.ToTable("AppFeaturePermissions");

                    b.HasData(
                        new
                        {
                            AppFeatureId = 2,
                            AppPermissionId = 1
                        },
                        new
                        {
                            AppFeatureId = 2,
                            AppPermissionId = 2
                        },
                        new
                        {
                            AppFeatureId = 2,
                            AppPermissionId = 3
                        },
                        new
                        {
                            AppFeatureId = 2,
                            AppPermissionId = 4
                        });
                });

            modelBuilder.Entity("Domain.Entities.AppPermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppPermissions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "List",
                            NameAr = "الفهرسه"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Create",
                            NameAr = "الاضافه"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Update",
                            NameAr = "التعديل"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Delete",
                            NameAr = "المسح"
                        });
                });

            modelBuilder.Entity("Domain.Entities.AppProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppProfiles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Owner",
                            NameAr = "مالك النظام"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Admin",
                            NameAr = "مدير النظام"
                        });
                });

            modelBuilder.Entity("Domain.Entities.AppProfilePermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AppFeaturePermissionAppFeatureId")
                        .HasColumnType("int");

                    b.Property<int>("AppFeaturePermissionAppPermissionId")
                        .HasColumnType("int");

                    b.Property<int>("AppProfileId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppProfileId");

                    b.HasIndex("AppFeaturePermissionAppFeatureId", "AppFeaturePermissionAppPermissionId");

                    b.ToTable("AppProfilePermissions");
                });

            modelBuilder.Entity("Domain.Entities.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHashed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppUsers");
                });

            modelBuilder.Entity("Domain.Entities.AppUserProfile", b =>
                {
                    b.Property<string>("AppUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AppProfileId")
                        .HasColumnType("int");

                    b.HasKey("AppUserId", "AppProfileId");

                    b.HasIndex("AppProfileId");

                    b.ToTable("AppUserProfiles");
                });

            modelBuilder.Entity("Domain.Entities.AppFeaturePermission", b =>
                {
                    b.HasOne("Domain.Entities.AppFeature", "AppFeature")
                        .WithMany()
                        .HasForeignKey("AppFeatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.AppPermission", "AppPermission")
                        .WithMany()
                        .HasForeignKey("AppPermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppFeature");

                    b.Navigation("AppPermission");
                });

            modelBuilder.Entity("Domain.Entities.AppProfilePermission", b =>
                {
                    b.HasOne("Domain.Entities.AppProfile", "AppProfile")
                        .WithMany()
                        .HasForeignKey("AppProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.AppFeaturePermission", "AppFeaturePermission")
                        .WithMany()
                        .HasForeignKey("AppFeaturePermissionAppFeatureId", "AppFeaturePermissionAppPermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppFeaturePermission");

                    b.Navigation("AppProfile");
                });

            modelBuilder.Entity("Domain.Entities.AppUserProfile", b =>
                {
                    b.HasOne("Domain.Entities.AppProfile", null)
                        .WithMany()
                        .HasForeignKey("AppProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
